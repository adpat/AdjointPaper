#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
theorems-std
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Preliminaries
\begin_inset CommandInset label
LatexCommand label
name "sec:Preliminaries"

\end_inset


\end_layout

\begin_layout Subsection
Conservation law PDE's
\begin_inset CommandInset label
LatexCommand label
name "sub:Hyperbolic-PDE's"

\end_inset


\end_layout

\begin_layout Standard
We are mainly interested in scalar hyperbolic conservation laws of the following
 form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\pfrac{\cvar\left(t,x\right)}t+\pfrac{f\left(\cvar\left(t,x\right)\right)}x=0\label{eq:cons}
\end{equation}

\end_inset

where 
\begin_inset Formula $\cvar:\left[0,\infty\right]\times\mathbb{R}\rightarrow\mathbb{R}$
\end_inset

 is the scalar 
\begin_inset Quotes eld
\end_inset

conserved
\begin_inset Quotes erd
\end_inset

 quantity, and 
\begin_inset Formula $f:\mathbb{R}\rightarrow\mathbb{R}$
\end_inset

 is the flux function.
 If we assume 
\begin_inset Formula $f$
\end_inset

 to be 
\begin_inset Formula $C^{2}$
\end_inset

, we can rewrite Equation
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons"

\end_inset

) as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\cvar_{t}+f\left(\cvar\right)_{x}=0\label{eq:cons-smooth}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For a particular initial condition 
\begin_inset Formula $\initstate\in L_{\text{loc}}^{1}\left(\mathbb{R};\mathbb{R}\right)$
\end_inset

, we seek 
\begin_inset Quotes eld
\end_inset

weak
\begin_inset Quotes erd
\end_inset

 solutions of 
\begin_inset Formula $\cvar$
\end_inset

 for the Cauchy problem:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{cases}
\cvar_{t}+f\left(\cvar\right)_{x} & =0\\
\cvar\left(0,x\right) & =\initstate\left(x\right)
\end{cases}\label{eq:cauchy}
\end{equation}

\end_inset

More details on weak solutions to hyperbolic PDE's are available, in particular,
 in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "garavello2006traffic,Evans1998"

\end_inset

.
 It can be shown that a unique weak solution for all Cauchy problems of
 the form in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cauchy"

\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:Riemann-Problem"

\end_inset

Riemann Problem.
\end_layout

\begin_layout Definition
A Riemann problem is a Cauchy problem with a piecewise-constant initial
 condition that has one point of discontinuity, 
\begin_inset Formula $x=\bar{x}$
\end_inset

 (called the Riemann data):
\end_layout

\begin_layout Definition
\begin_inset Formula 
\[
\initvar{\cvar}\left(x\right)=\begin{cases}
\cvar_{-} & x<\initvar x\\
u_{+} & x\ge\initvar x
\end{cases}
\]

\end_inset

Without loss of generality, we may take 
\begin_inset Formula $\bar{x}=0$
\end_inset

.
\end_layout

\begin_layout Standard
It can be shown that along lines of constant 
\begin_inset Formula $\frac{x}{t}$
\end_inset

, the 
\begin_inset Formula $\cvar$
\end_inset

 solution generated from the Riemann data 
\begin_inset Formula $\left(\cvar_{-};\cvar_{+}\right)$
\end_inset

 has a constant value.
 We denote the self-similar solution by 
\begin_inset Formula $\ss{\frac{x}{t}}{\cvar_{-}}{\cvar_{+}}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\ssvar: & \mathbb{R}\times\mathbb{R}\times\mathbb{R}\rightarrow & \mathbb{R}\\
 & \left(\frac{x}{t};\cvar_{-},\cvar_{+}\right)\mapsto & \ss{\frac{x}{t}}{\cvar_{-}}{\cvar_{+}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Network of PDE's
\begin_inset CommandInset label
LatexCommand label
name "sub:Network-of-PDE's"

\end_inset


\end_layout

\begin_layout Standard
A network of PDE's is defined as a set of 
\begin_inset Formula $\nlinks$
\end_inset

 links 
\begin_inset Formula $\links=\left[1,\nlinks\right]$
\end_inset

, with junctions 
\begin_inset Formula $\jns$
\end_inset

, where a junction 
\begin_inset Formula $\jn\in\jns$
\end_inset

 is defined as the union of the set of 
\begin_inset Formula $\ninc_{\jn}$
\end_inset

 incoming links 
\begin_inset Formula $\Inc\left(\jn\right)=\tuple{\jlink{\jn}1}{\jlink{\jn}{\ninc_{\jn}}}\subset\links$
\end_inset

 and the set of 
\begin_inset Formula $\nout_{\jn}$
\end_inset

 outgoing links 
\begin_inset Formula $\Out\left(\jn\right)=\tuple{\jlink{\jn}{\ninc_{\jn}+1}}{\jlink{\jn}{\ninc_{\jn}+\nout_{\jn}}}\subset\links$
\end_inset

.
 Each link 
\begin_inset Formula $\link\in\links$
\end_inset

 has an associated upstream junction 
\begin_inset Formula $\jup{\link}\in\jns$
\end_inset

 and downstream junction 
\begin_inset Formula $\jdown{\link}\in\jns$
\end_inset

, and has an associated spatial domain 
\begin_inset Formula $\left]0,L_{\link}\right[$
\end_inset

 over which the evolution of the state on link 
\begin_inset Formula $\link$
\end_inset

, 
\begin_inset Formula $\cvar_{\link}\left(t,x\right)$
\end_inset

, obeys the following scalar conservation law:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{cases}
\left(\cvar_{\link}\right)_{t}+f\left(\cvar_{\link}\right)_{x} & =0\\
\cvar_{\link}\left(0,x\right) & =\initstate_{\link}\left(x\right)
\end{cases}\label{eq:cauchy-i}
\end{equation}

\end_inset

where 
\begin_inset Formula $u_{i}^{0}\in L_{\text{loc}}^{1}\left(\mathbb{R};\mathbb{R}\right)$
\end_inset

 is the initial condition on link 
\begin_inset Formula $\link$
\end_inset

.
 For simplicity of notation, this section considers a single junction 
\begin_inset Formula $\jn\in\jns$
\end_inset

 with 
\begin_inset Formula $\Inc\left(\jn\right)=\left(1,\ldots,\ninc\right)$
\end_inset

 and 
\begin_inset Formula $\Out\left(\jn\right)=\left(\ninc+1,\ldots,\ninc+\nout\right)$
\end_inset

.
\end_layout

\begin_layout Standard
While the behavior on each link 
\begin_inset Formula $\cvar_{\link}\left(t,x\right)$
\end_inset

 is determined by the dynamics described in Equation
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons-smooth"

\end_inset

), the behavior of the links still needs to be defined when they meet at
 junctions.
\end_layout

\begin_layout Definition
Riemann problem at junctions.
 
\end_layout

\begin_layout Definition
Let all links 
\begin_inset Formula $\link$
\end_inset

 have a constant initial profile 
\begin_inset Formula $\cvar_{\link}\left(0,x\right)=\initstate_{\link}\in\mathbb{R}$
\end_inset

 (called the Riemann data) with incoming links having a spatial domain 
\begin_inset Formula $\left]-\infty,0\right[$
\end_inset

 and outgoing links having a spatial domain 
\begin_inset Formula $\left]0,\infty\right[$
\end_inset

.
 The solution of 
\begin_inset Formula $\cvar_{\link}\left(x,t\right)$
\end_inset

 for all links 
\begin_inset Formula $\link\in\Inc\left(\jn\right)\cup\Out\left(\jn\right)$
\end_inset

 and 
\begin_inset Formula $t\ge0$
\end_inset

 is defined as the solution to the Riemann problem at junction 
\begin_inset Formula $J$
\end_inset

 with initial data 
\begin_inset Formula $\tuple{\initstate_{1}}{\initstate_{\ninc+\nout}}$
\end_inset

.
\end_layout

\begin_layout Standard
We define a Riemann solver:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\RS: & \mathbb{R}^{m+n} & \rightarrow\mathbb{R}^{m+n}\\
 & \tuple{\initstate_{1}}{\initstate_{\ninc+\nout}} & \mapsto\RS\tuple{\initstate_{1}}{\initstate_{\ninc+\nout}}=\tuple{\trace{\cvar}_{1}}{\trace{\cvar}_{\ninc+\nout}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\trace{\cvar}_{\link}$
\end_inset

 provides the trace for link 
\begin_inset Formula $\link$
\end_inset

 at the junction for all time 
\begin_inset Formula $t\ge0$
\end_inset

.
 Specifically, for a link 
\begin_inset Formula $i\in\Inc\left(\jn\right)$
\end_inset

, the solution 
\begin_inset Formula $u_{i}\left(t,x\right)$
\end_inset

 over its spatial domain 
\begin_inset Formula $x<0$
\end_inset

 is given by the solution to the Riemann problem:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{cases}
\left(\cvar_{\link}\right)_{t}+f\left(\cvar_{\link}\right)_{x} & =0\\
\cvar_{\link}\left(0,x\right) & =\begin{cases}
\initstate_{\link} & x<0\\
\trace{\cvar}_{\link} & x\ge0
\end{cases}
\end{cases}\label{eq:riemann-problem}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The Riemann problem for an outgoing link is defined similarly, with the
 exception that 
\begin_inset Formula $\cvar_{\link}\left(0,x>0\right)=\cvar_{\link}^{0}$
\end_inset

 and 
\begin_inset Formula $\cvar_{\link}\left(0,x\le0\right)=\trace{\cvar}_{\link}$
\end_inset

.
 Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Solution-of-boundary"

\end_inset

 gives a depiction of Riemann solution at the junction
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The assumption of an unbounded spatial domain is to eliminate the need to
 explicitly consider boundary conditions away from the junction, and for
 each link, the solution near the junction generalizes to the case when
 the spatial domain is bounded.
\end_layout

\end_inset

.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ml/presentation/figs-gen/junctions-riemann-rs.eps
	width 50col%

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Solution of boundary conditions at junction.
 The boundary conditions 
\begin_inset Formula $\hat{\vect{\cvar}}^{0}$
\end_inset

 are produced by applying the Riemann solver to the initial conditions,
 
\begin_inset Formula $\RS\left(\vect{\cvar}^{0}\right)$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Solution-of-boundary"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following conditions are required for a valid Riemann solver as part
 of the definition: 
\end_layout

\begin_layout Itemize
The Riemann solver must produce self-similar solutions, i.e.
 
\begin_inset Formula 
\[
\RS\left(\RS\tuple{\initstate_{1}}{\initstate_{\ninc+\nout}}\right)=\RS\left(\tuple{\initstate_{1}}{\initstate_{\ninc+\nout}}\right)=\tuple{\trace{\cvar}_{1}}{\trace{\cvar}_{\ninc+\nout}}
\]

\end_inset


\end_layout

\begin_layout Itemize
All waves produced from the solution to Riemann problems on all links, generated
 by the boundary conditions at a junction, must emanate out from the junction.
 For example, the solution to the Riemann problem on an incoming link must
 produce waves with negative speeds, while the solution on an outgoing link
 must produce waves with positive speed.
 
\end_layout

\begin_layout Itemize
The sum of all incoming fluxes must equal the sum of all outgoing fluxes:
 
\begin_inset Formula 
\[
\sum_{i\in\Inc\left(\jn\right)}f\left(\trace{\cvar}_{\link}\right)=\sum_{j\in\Out\left(\jn\right)}f\left(\trace{\cvar}_{j}\right)
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
This condition guarantees mass conservation at junctions.
\end_layout

\end_deeper
\begin_layout Standard
The justification for these conditions can be found in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "garavello2006traffic"

\end_inset

.
\end_layout

\begin_layout Subsection
Godunov Discretization
\begin_inset CommandInset label
LatexCommand label
name "sub:Godunov-Discretization"

\end_inset


\end_layout

\begin_layout Standard
To approximate a hyperbolic PDE of the form in
\begin_inset space ~
\end_inset

(
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:cons-smooth"

\end_inset

) with a discretization in both space and time, we use Godunov's scheme
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "godunov1959"

\end_inset

.
 Given an initial condition that is piecewise-constant, Godunov's scheme
 gives a procedure to advance the system one time-step forward.
 This process can be repeated 
\emph on
ad infinum 
\emph default
by applying the scheme to the new condition generated from the previous
 time-step.
\end_layout

\begin_layout Standard
We define a numerical grid using the following notations 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\triangle t$
\end_inset

 is the fixed time grid size, 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\triangle x$
\end_inset

 is the fixed space grid size chosen with respect to the CFL condition
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This method can be generalized to non-uniform grid sizes, but is chosen
 to be uniform to simplify notation
\end_layout

\end_inset

, 
\end_layout

\begin_layout Itemize
\begin_inset Formula $(t^{\tind},x^{\xind})=(k\triangle t,l\triangle x)$
\end_inset

 for 
\begin_inset Formula $\tind\in\mathbb{N}$
\end_inset

 and 
\begin_inset Formula $\xind\in\mathbb{Z}$
\end_inset

 grid points.
 
\end_layout

\begin_layout Standard
For a function 
\begin_inset Formula $\dvar$
\end_inset

 defined at the grid we write 
\begin_inset Formula $\discrete{\xind}{\tind}=\dvar(t^{\tind},x^{\xind})$
\end_inset

 for 
\begin_inset Formula $\tind,\xind$
\end_inset

 varying on a subset of 
\begin_inset Formula $\mathbb{N}$
\end_inset

 and 
\begin_inset Formula $\mathbb{Z}$
\end_inset

.
\end_layout

\begin_layout Paragraph
Godunov scheme for a single link.
\end_layout

\begin_layout Standard
Consider a hyperbolic equation together with an initial condition like
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:cauchy"

\end_inset

.
 A solution of the problem is constructed by taking a piecewise constant
 approximation of the initial data 
\begin_inset Formula $\initvar{\dvar}^{\triangle}$
\end_inset

 and then the scheme constructs the solution recursively from the approximate
 initial data as in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:godproj"

\end_inset

.
 
\begin_inset Formula 
\begin{equation}
u_{l}^{k+1}=\dfrac{1}{\Delta x}\int_{x^{\xind}}^{x^{\xind+1}}u^{\Delta}(t^{k+1},x)dx.\label{eq:godproj}
\end{equation}

\end_inset

The Courant–Friedrichs–Lewy (CFL) condition 
\begin_inset Formula 
\[
\lambda^{\max}\le\frac{\triangle x}{\triangle t}
\]

\end_inset

guarantees that the waves in two neighboring cells do not interact at the
 cell boundaries before 
\begin_inset Formula $\triangle t$
\end_inset

.
 Above 
\begin_inset Formula $\lambda^{\max}=\underset{a}{\max}|f'\left(a\right)|$
\end_inset

 is the maximum absolute wave speed.
\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $\cvar^{\triangle}$
\end_inset

 in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:godproj"

\end_inset

 is an exact solution of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:cons-smooth"

\end_inset

 we can use the Gauss-Green formula to compute this value
\begin_inset Note Note
status open

\begin_layout Plain Layout
citation
\end_layout

\end_inset

.
 Under the CFL Condition, the solutions are locally given by the solutions
 of the Riemann problems and, in particular, the flux at 
\begin_inset Formula $x=x^{\xind}$
\end_inset

 for 
\begin_inset Formula $t\in(t^{k},t^{k+1})$
\end_inset

 is given by 
\begin_inset Formula 
\[
f(u(t,x_{l}))=f(W_{R}(0;u_{l-1}^{k},u_{l}^{k})),
\]

\end_inset

and the flux at 
\begin_inset Formula $x=x_{l+1}$
\end_inset

 for 
\begin_inset Formula $t\in(t^{k},t^{k+1})$
\end_inset

 is given by 
\begin_inset Formula 
\[
f(u(t,x_{l+1}))=f(W_{R}(0;\dvar_{l}^{k},\dvar_{l+1}^{k})),
\]

\end_inset

.
 As the flux is constant at 
\begin_inset Formula $x=0$
\end_inset

, we can put it out of the integral and, setting 
\begin_inset Formula $g(u,v)=f(W_{R}(0;u,v))$
\end_inset

, Under the CFL condition the scheme can be written as 
\begin_inset Formula 
\begin{equation}
\dvar_{l}^{k+1}=\dvar_{l}^{k}-\frac{\Delta t}{\Delta x}(\god(\dvar_{l}^{k},\dvar_{l+1}^{k})-\god(\dvar_{l-1}^{k},\dvar_{l}^{k})),\label{eq:godscheme}
\end{equation}

\end_inset

where 
\begin_inset Formula $g^{G}$
\end_inset

 is the numerical flux:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\god: & \mathbb{R}\times\mathbb{R} & \rightarrow\mathbb{R}\\
 & \left(\discrete{\xind}{},\discrete{\xind+1}{}\right) & \mapsto\god\left(\discrete{\xind}{},\discrete{\xind+1}{}\right)=f(W_{R}(0;\discrete{\xind}{},\discrete{\xind+1}{}))
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Paragraph
Godunov scheme at junctions.
\begin_inset CommandInset label
LatexCommand label
name "par:Godunov-scheme-at"

\end_inset


\end_layout

\begin_layout Standard
We can generalize the above approach to the case where the grid point 
\begin_inset Formula $x^{\xind}$
\end_inset

 is adjacent to a junction, in which case there is not necessarily a single
 adjacent cell.
 For incoming links near the junction, we have: 
\begin_inset Formula 
\begin{align*}
u_{L_{i}}^{k+1}=u_{L_{i}}^{k+1}-\dfrac{\Delta t}{\Delta x}(f(\hat{u}_{i})-\god(u_{L_{i}-1}^{k},u_{L_{i}}^{k})), & \link\in\left[1,\ninc\right]
\end{align*}

\end_inset

where 
\begin_inset Formula $f(\hat{u}_{i})$
\end_inset

 is the solution of the Riemann solver 
\begin_inset Formula $\RS\tuple{\discrete 1{\tind}}{\discrete{\ninc+\nout}{\tind}}$
\end_inset

 for link 
\begin_inset Formula $\link$
\end_inset

 at the junction.
 The same can be done for the outgoing links: 
\begin_inset Formula 
\begin{align*}
u_{0}^{k+1}=u_{0}^{k}-\dfrac{\Delta t}{\Delta x}(\god(u_{0}^{k},u_{1}^{k})-f(\hat{u}_{i})), & i\in\left[\ninc+1,\ninc+\nout\right]
\end{align*}

\end_inset


\end_layout

\begin_layout Remark
Using the Godunov scheme, each mesh grid along a given 
\begin_inset Formula $t^{\tind}$
\end_inset

 can be seen as a node for a 1-to-1 junction with one incoming and one outgoing
 link.
 It is therefore more convenient to consider that every discretized cell
 is, rather, a link with both an upstream and downstream junction.
 Thus, we consider networks where the state of each link 
\begin_inset Formula $\link\in\links$
\end_inset

 at a time-step 
\begin_inset Formula $\tind\in\left[0,\ntime-1\right]$
\end_inset

 is represented by the single discrete value 
\begin_inset Formula $\discrete{\link}{\tind}$
\end_inset

.
\end_layout

\begin_layout Standard
The previous remark allows us to develop a generalized update step for all
 discrete state variables.
 We first introduce a definition in order to reduce the cumbersome nature
 of the proceeding notation.
 Let the state variables adjacent to a junction 
\begin_inset Formula $\jn\in\jns$
\end_inset

 at a time-step 
\begin_inset Formula $\tind\in\left[0,\ntime-1\right]$
\end_inset

 be represented as 
\begin_inset Formula $\juncstate{\jn}{\tind}\defeq\tuple{\discrete{\link_{\jn}^{1}}{\tind}}{\discrete{\link_{\jn}^{\ninc_{\jn}+\nout_{\jn}}}{\tind}}$
\end_inset

.
 Similarly, we let the solution of a Riemann solver be represented as 
\begin_inset Formula $\junctrace{\jn}{}\defeq\RS\left(\juncstate{\jn}{}\right)$
\end_inset

.
 Then, for a link 
\begin_inset Formula $\link\in\links$
\end_inset

 with upstream and downstream junctions, 
\begin_inset Formula $\jup{\link}$
\end_inset

 and 
\begin_inset Formula $\jdown{\link}$
\end_inset

, and time-step 
\begin_inset Formula $\tind\in\left[0,\ntime-1\right]$
\end_inset

, the update step becomes:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
u_{\link}^{k+1} & =u_{\link}^{k}-\dfrac{\Delta t}{\Delta x}(f(\left(\RS\left(\juncstate{\jdown{\link}}{\tind}\right)\right)_{\link})-f(\left(\RS\left(\juncstate{\jup{\link}}{\tind}\right)\right)_{\link}))\nonumber \\
 & =u_{\link}^{k}-\dfrac{\Delta t}{\Delta x}(f(\left(\junctrace{\jdown{\link}}{}\right)_{\link})-f(\left(\junctrace{\jup{\link}}{}\right)_{\link}))\label{eq:reg-update}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\left(s\right)_{i}$
\end_inset

 is the 
\begin_inset Formula $i$
\end_inset

th element of the tuple 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Paragraph
Composing the Riemann solver and flux function.
\begin_inset CommandInset label
LatexCommand label
name "par:Composing-the-Riemann"

\end_inset


\end_layout

\begin_layout Standard
The equations are sometimes simplified if we allow ourselves to consider
 the composition of the Riemann solver 
\begin_inset Formula $\RS$
\end_inset

 and the flux function 
\begin_inset Formula $f$
\end_inset

 directly.
 We define this composition of functions as 
\begin_inset Formula $\god_{\jn}$
\end_inset

, the Godunov flux solution solution at a junction:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\god_{\jn}: & \mathbb{R}^{\ninc_{\jn}+\nout_{\jn}} & \rightarrow\mathbb{R}^{\ninc_{\jn}+\nout_{\jn}}\\
 & \juncstate{\jn}{} & \mapsto f\left(RS\left(\juncstate{\jn}{}\right)\right)=\left(f\left(\trace{\dvar}_{1}\right),\ldots,f\left(\trace{\dvar}_{\ninc+\nout}\right)\right)
\end{eqnarray*}

\end_inset

This gives a simplified expressions for the update step:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
u_{\link}^{k+1}=u_{\link}^{k}-\dfrac{\Delta t}{\Delta x}(\left(\god_{\jdown{\link}}\left(\juncstate{\jdown{\link}}{\tind}\right)\right)_{\link}-\left(\god_{\jup{\link}}\left(\juncstate{\jup{\link}}{\tind}\right)\right)_{\link})\label{eq:composed-flux}
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph
Full discrete solution method.
\begin_inset CommandInset label
LatexCommand label
name "par:Full-solution-method"

\end_inset


\end_layout

\begin_layout Standard
Assume a discrete scalar hyperbolic network of PDE's with links 
\begin_inset Formula $\links$
\end_inset

 and junctions 
\begin_inset Formula $\jns$
\end_inset

, and a known discrete state at time-step 
\begin_inset Formula $\tind$
\end_inset

, 
\begin_inset Formula $\left(\initdiscrete_{\link}^{\tind}:\link\in\links\right)$
\end_inset

.
 The solution method for advancing the discrete system forward one time-step
 is given by: 
\end_layout

\begin_layout Enumerate
Begin with initial condition (
\begin_inset Formula $t=k\triangle t$
\end_inset

) 
\begin_inset Formula $\left(\initdiscrete_{\link}^{\tind}:\link\in\links\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
For every junction 
\begin_inset Formula $\jn\in\jns$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Apply the Riemann solver to Riemann data to obtain the boundary condition
 
\begin_inset Formula $\junctrace\jn\tind=\RS\left(\juncstate{\jn}{\tind}\right)$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Enumerate
For every link 
\begin_inset Formula $\link\in\links$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
The discrete value over link 
\begin_inset Formula $\link$
\end_inset

 at time-step 
\begin_inset Formula $\tind+1$
\end_inset

 is given by
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:reg-update"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u_{\link}^{k+1}=u_{\link}^{k}-\dfrac{\Delta t}{\Delta x}(f(\left(\junctrace{\jdown{\link}}{}\right)_{\link})-f(\left(\junctrace{\jup{\link}}{}\right)_{\link}))
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
If we instead use the composed flux junction solver 
\begin_inset Formula $\hat{F}$
\end_inset

, then the method simplifies to: 
\end_layout

\begin_layout Enumerate
Begin with initial condition (
\begin_inset Formula $t=k\triangle t$
\end_inset

) 
\begin_inset Formula $\left(\initdiscrete_{\link}^{\tind}:\link\in\links\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
For every link 
\begin_inset Formula $\link\in\links$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
The discrete value over link 
\begin_inset Formula $\link$
\end_inset

 at time-step 
\begin_inset Formula $\tind+1$
\end_inset

 is given by
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:composed-flux"

\end_inset

: 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
u_{\link}^{k+1}=u_{\link}^{k}-\dfrac{\Delta t}{\Delta x}(\left(\god_{\jdown{\link}}\left(\juncstate{\jdown{\link}}{\tind}\right)\right)_{\link}-\left(\god_{\jup{\link}}\left(\juncstate{\jup{\link}}{\tind}\right)\right)_{\link})\label{eq:fhat}
\end{equation}

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
